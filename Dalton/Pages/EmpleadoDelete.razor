@page "/empleados/delete"
@using Dalton.Services
@using Dalton.Models
@inject NavigationManager navigationManager
@inject MyApiService apiService
@inject HttpClient httpClient

<h3>Eliminar Empleado</h3>

@if (empleado == null)
{
    <p>Cargando empleado...</p>
}
else
{
    <dl>
        <dt>Empleado ID:</dt>
        <dd>@empleado.BintEmpleadoKey</dd>
        <dt>Persona Link:</dt>
        <dd>@empleado.BintPersonaLink</dd>
        <dt>Proveedor Link:</dt>
        <dd>@empleado.BintIdProveedorLink</dd>
        <dt>Plaza Link:</dt>
        <dd>@empleado.BintPlazaLink</dd>
        <dt>Material Link:</dt>
        <dd>@empleado.BintMaterialLink</dd>
        <dt>Fecha Ingreso:</dt>
        <dd>@empleado.DtFechaIngreso.ToShortDateString()</dd>
        <dt>Fecha Baja:</dt>
        <dd>@empleado.DtFechaBaja?.ToShortDateString()</dd>
        <dt>Foto:</dt>
        <dd>@empleado.VchFoto</dd>
        <dt>Activo:</dt>
        <dd>@(empleado.BitActivo ? "Activo" : "Inactivo")</dd>
    </dl>

    <button class="btn btn-danger" @onclick="EliminarEmpleado">Eliminar</button>
}


@code {
    private Empleado empleado;

    [Parameter]
    public long Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        empleado = await apiService.GetByIdAsync<Empleado>("api/empleados", Id);
    }

    private async Task EliminarEmpleado()
    {
        await apiService.DeleteAsync("/api/empleados/" + Id);
        navigationManager.NavigateTo("/empleados");
    }

    public class Empleado
    {
        public long BintEmpleadoKey { get; set; }
        public long BintPersonaLink { get; set; }
        public long BintIdProveedorLink { get; set; }
        public long BintPlazaLink { get; set; }
        public long BintMaterialLink { get; set; }
        public DateTime DtFechaIngreso { get; set; }
        public DateTime? DtFechaBaja { get; set; }
        public string VchFoto { get; set; }
        public bool BitActivo { get; set; }
     }
    }
}
